{% schema %}
{
  "name": "Product",
  "max_blocks": 3,
  "settings": [
	{
		"id": "add_to_cart",
		"type": "text",
		"label": "Add Button",
		"default": "Add to cart"
	},
	{
	   "type": "radio",
	   "id": "show_quantity",
	   "options": [
	      { "value": "yes", "label": "Yes"},
	      { "value": "no", "label": "No"}
	   ],
	   "default":   "no",
	   "label": "Show quantity selector"
	},
	{
	   "type": "radio",
	   "id": "show_related",
	   "options": [
	      { "value": "yes", "label": "Yes"},
	      { "value": "no", "label": "No"}
	   ],
	   "default":   "no",
	   "label": "Show related products",
	   "info": "Related products will only be shown if there is a collection that contains the product."
	},
	{
	   "type": "radio",
	   "id": "show_dots",
	   "options": [
	      { "value": "yes", "label": "Yes"},
	      { "value": "no", "label": "No"}
	   ],
	   "default":   "no",
	   "label": "Show dots",
	   "info": "Show the dot indicators."
		
	},
	{
	   "type": "radio",
	   "id": "show_all",
	   "options": [
	      { "value": "yes", "label": "Yes"},
	      { "value": "no", "label": "No"}
	   ],
	   "default":   "no",
	   "label": "Show related link",
	   "info": "Show link to all related products."
		
	},
		{
		"id": "added",
		"type": "text",
		"label": "Notification title",
		"default": "Added",
		"info": "Title for the message displayed when a related product is added to the cart. Leave blank to hide the title."
	},
	{
		"id": "message",
		"type": "text",
		"label": "Notification title",
		"default": "The related product has been added to your basket.",
		"info": "The message displayed when a related product is added to the cart."
	}
  ], 
  "blocks": [
	  {
		"type": "text",
		"name": "Images",
		"settings": [
		{
		      "type": "image_picker",
		      "id": "people_image",
		      "label": "People"
		}
	]
	}
  ]
}
{% endschema %}

{% comment %}
  Collections to ignore.
  Never pick related items from those.
{% endcomment %}

{% assign exclusions = 'frontpage,all' | split: ',' %}

{% comment %}
  Looking for a relevant collection.
{% endcomment %}

{% if product.metafields.c_f['Related Products'] %}
  {% assign collection = collections[product.metafields.c_f['Related Products']] %}
{% endif %}

{% assign found_a_collection = false %}
{% if collection and collection.all_products_count > 1 %}
  {% unless exclusions contains collection.handle %}
    {% assign found_a_collection = true %}
  {% endunless %}
{% endif %}
{% unless found_a_collection %}
  {% for c in product.collections %}
    {% unless exclusions contains c.handle or c.all_products_count < 2 %}
      {% assign found_a_collection = true %}
      {% assign collection = c %}
      {% break %}
    {% endunless %}
  {% endfor %}
{% endunless %}

{% comment %}
  If we have a relevant collection.
{% endcomment %}

    	   <section>        
	           
	            <div class="row justify-content-left justify-content-lg-between">
	                	                
	                <div class="col-12 col-sm-8">
	                    
	                    <form action="/cart/add" method="post" enctype="multipart/form-data">
	                    <div class="ml--20">
	                    <h2 id="tape" class="tape-green tape-box-orange mb-20 d-inline-block">{{ product.title }}</h2>
	                    </div>
	
						{%- if product.description.size > settings.character_limit -%}
						{%- assign should_truncate = true -%}
						{%- else -%}
						{%- assign should_truncate = false -%}
						{%- endif -%}

						  <div class="mb-20 product-description{% if should_truncate %} short-description{% endif %}" itemprop="description">
					        {{ product.description }}
					        {% if should_truncate %}
					        <a class="more-link" href="#">More...</a>
					        {% endif %}
					      </div>
					      
					      {% assign hide_default_title = false %}
						  {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
						  {% assign hide_default_title = true %}
						  {% endif %}  

					      <div id="product-variants" class="pb-20 mb-20 {% if hide_default_title %} hidden{% endif %}">
					      	<div class="custom-select shadow-below-small" style="width:400px;">
					        <select id="product-select" name="id">
					        <option value="">Select:</option>
					        {% for variant in product.variants %}
					          <option {% if variant == product.selected_or_first_available_variant %}selected{% endif %} value="{{ variant.id }}">
					          {{ variant.title }} - {{ variant.price | money }}
					          </option>
					        {% endfor %}
					        </select>
					    	</div>
					      </div> 
					    
					{% if product.available %}
						{% if hide_default_title == true %}
					 	<div class="mb-30">
	                        <h4><strong>Price:</strong> {{ product.price | money }}  {{ settings.tax_format }}</h4>
	                    </div>
	                    {% endif %}
	                    
					    <div class="row">
						    
						{% if section.settings.show_quantity == "yes" %}    
                        <div class="col-12 col-sm-6 mb-20">
                            <label class="d-block"><strong>Quantity</strong></label>
                            <div class="mt-1">
				               <input class="form-control form-control-light form-control-fixed bg-white outline outline-black text-black rounded shadow-small" type="number" id="quantity" name="quantity" min="1" step="1" value="1" placeholder=""/>
				               <span class="form-control-stepper-wrapper form-control-stepper-left">
				                	<span class="stepper glyphicon glyphicon-minus" data-direction="down"></span>
				               </span>
				               <span class="form-control-stepper-wrapper">
				                	<span class="stepper glyphicon glyphicon-plus" data-direction="up"></span>
				               </span>               
                            </div>
                        </div>
						{% endif %} 
						
                        <div class="col-12 col-sm-6 mb-20">
					      <label class="d-block">&nbsp;</label>
					      <div id="product-add">
					      <a href="#" id="dummy_submit" class="btn" style="margin-top:2px;">{{ section.settings.add_to_cart | escape }}</a>
						  <input class="btn hidden" type="submit" name="add" id="real_submit" value="{{ section.settings.add_to_cart | escape }}">
	      				  </div>
                        </div>
                                               
					    </div> <!-- .row -->
					
					{% else %}
						<p id="tape" class="tape-thin tape-box-black tape-green tape-removed">Out of Stock</p>
					{% endif %}
					      
	                    </form>
	                
	                </div>

	                <div class="col-12 col-sm-4">
	                    <img class="responsive" src="{{ product | img_url: 'x600'}}" alt=""> 
	                    <div class="ml-50">
	                    {% if section.blocks.size > 0 %}
	                    <div class="mt-50">
	                    <img src="{{ section.blocks[0].settings.people_image | img_url: 'x100'}}" alt="">									</div>
	                    {% endif %}
	                    <div class="d-none d-lg-block mt-50 ml--150">
	                    {% if section.blocks.size > 1 %}
	                    <img src="{{ section.blocks[1].settings.people_image | img_url: 'x100'}}" alt="">
	                    </div>
	                    {% endif %}
	                    {% if section.blocks.size > 2 %}
	                    <div class="d-none d-lg-block ml-200">
	                    <img src="{{ section.blocks[2].settings.people_image | img_url: 'x150'}}" alt="">
	                    </div>
	                    {% endif %}	
	                    </div>                        
	                </div>

	                	                
	                {% if found_a_collection and section.settings.show_related == "yes" %}
	                 <div class="col-12 mt--50">
					 	{% include 'related' %}	                 
	                 </div>	
	                 {% endif %}                
	                
	            </div>
	  
			</section>

   <script>
	$( document ).ready(function() {

		function updateCartCount(howMany) {
			var desktopBadge = $('#count-desktop')
			var mobileBadge = $('#count-mobile')
			desktopBadge.text(howMany)
			mobileBadge.text(howMany)
			console.log(howMany)
		}
		
		function addToBasket(id, howMany) {
			
			const jsonString = '{ "' + id + '" : ' + howMany + ' }' 
			var cartUpdates = JSON.parse(jsonString)
	
		    var params = {
		      async: true,
		      type: 'POST',
		      url: '/cart/update.js',	
		      data: { updates: cartUpdates },	
		      dataType: 'json',
		      success:function(data) {
			      console.log(data)
			   updateCartCount(data.item_count)
			   notifyUser('{{ section.settings.added }}', '{{ section.settings.message }}', 3000);		        
		      }	
		    };
		    
		    $.ajax(params);			
			
		}
	
		$(".add-to-cart").on('click', function(evt){
			var howMany = $(this).closest("div.product-box-button").find("input[name='numberToAdd']").val();
			addToBasket($(this).data('id'), howMany)
			evt.preventDefault() 
		});

		  $("#dummy_submit").on("click", function(){
		    $("#real_submit").click(); 
		    return false;
		  });
				
						
	});      
</script>

<script>
var x, i, j, selElmnt, a, b, c;
/*look for any elements with the class "custom-select":*/
x = document.getElementsByClassName("custom-select");
for (i = 0; i < x.length; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  /*for each element, create a new DIV that will act as the selected item:*/
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /*for each element, create a new DIV that will contain the option list:*/
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < selElmnt.length; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
        /*when an item is clicked, update the original select box,
        and the selected item:*/
        var y, i, k, s, h;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        h = this.parentNode.previousSibling;
        for (i = 0; i < s.length; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            for (k = 0; k < y.length; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
      /*when the select box is clicked, close any other select boxes,
      and open/close the current select box:*/
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });
}
function closeAllSelect(elmnt) {
  /*a function that will close all select boxes in the document,
  except the current select box:*/
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
document.addEventListener("click", closeAllSelect);
</script>

       