{% schema %}
{
  "name": "Collection",
  "settings": [
    {
	   "type": "product",
	   "id": "feature_product",
	   "label": "Featured product",
	   "info": "The featured product will be given more prominence on the page."
	},
	{
	    "type":      "range",
	    "id":        "featured_position",
	    "min":       1,
	    "max":       10,
	    "step":       1,
	    "label":     "Position",
	    "default":   1,
	    "info": "Select the position of the featured product in the grid."
	},
	{
	   "type": "select",
	   "id": "feature_colour",
	   "options": [
	      { "value": "green", "label": "Green"},
	      { "value": "orange", "label": "Orange"},
	      { "value": "yellow", "label": "Yellow"},
	      { "value": "pink", "label": "Pink"},
	      { "value": "black", "label": "Black"},
	      { "value": "white", "label": "White"},
	      { "value": "green-dark", "label": "Darker Green"},
	      { "value": "orange-dark", "label": "Darker Orange"},
	      { "value": "yellow-dark", "label": "Darker Yellow"},
	      { "value": "pink-dark", "label": "Darker Pink"},
	      { "value": "white-dark", "label": "Darker White"}
	   ],
	   "label": "Background colour",
	   "default": "white"
	   },
	{
		"id": "added",
		"type": "text",
		"label": "Notification title",
		"default": "Added",
		"info": "Title for the message displayed when a product is added to the cart. Leave blank to hide the title."
	},
	{
		"id": "message",
		"type": "text",
		"label": "Notification title",
		"default": "Your selected product has been added to your basket.",
		"info": "The message displayed when a product is added to the cart."
	},
		{
		"id": "empty_collection",
		"type": "text",
		"label": "Empty message",
		"default": "There are no products in this view.",
		"info": "The message displayed when collection is empty."
	}
  ]
}
{% endschema %}
    

    <section class="ecommerces text-center mt--50" id="ecommerces-1">
        <div class="container">
<!--
            <div class="tabs-content mb-30" id="ecommerces-1-tabs">
                <div class="tab-panel active" id="ecommerce-1-tab-0"> 
-->
                    <div class="row">

						  {% for product in collection.products %}
						      {% if product.handle == section.settings.feature_product %}
						      {% capture featured %}
						      {% include 'product-item-featured' %}
						      {% endcapture %}
						      {% endif %}
						  {% endfor %}
						  
						  {%- assign count = 0 -%}
						  {%- assign position = section.settings.featured_position -%}
						  {% for product in collection.products %}
						  	{%- unless product.type == "Hidden" -%}
							  	{%- if product.price > 0 -%}
							      {% if product.handle != section.settings.feature_product %}
							      {% assign count = count | plus: 1 %}
							      {% if count == position %} {{ featured }} {% endif %}
							      {% include 'product-item' %}
							      {% endif %}
							    {%- endif -%}
						    {%- endunless -%}
						  {% else %}
						    <h2>{{ section.settings.empty_collection }}</h2>
						  {% endfor %}

                    </div>
<!--
                </div>
                
            </div>
-->
           
           
        </div>
    </section>
    
    <script>
	$( document ).ready(function() {

		function updateCartCount(howMany) {
			var desktopBadge = $('#count-desktop')
			var mobileBadge = $('#count-mobile')
			desktopBadge.text(howMany)
			mobileBadge.text(howMany)
			console.log(howMany)
		}
		
		function addToBasket(id, howMany) {
			
			const jsonString = '{ "' + id + '" : ' + howMany + ' }' 
			var cartUpdates = JSON.parse(jsonString)
	
		    var params = {
		      async: true,
		      type: 'POST',
		      url: '/cart/update.js',	
		      data: { updates: cartUpdates },	
		      dataType: 'json',
		      success:function(data) {
			      console.log(data)
			   updateCartCount(data.item_count)
			   notifyUser('{{ section.settings.added }}', '{{ section.settings.message }}', 3000);		        
		      }	
		    };
		    
		    $.ajax(params);			
			
		}
	
		$(".add-to-cart").on('click', function(evt){
			var howMany = $(this).closest("div.product-box-button").find("input[name='numberToAdd']").val();
			addToBasket($(this).data('id'), howMany)
			evt.preventDefault() 
		});
				
						
	});      
</script>


    
       
